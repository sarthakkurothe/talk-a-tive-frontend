[{"D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\index.js":"1","D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\App.js":"2","D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\reportWebVitals.js":"3","D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\modules\\Form\\index.js":"4","D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\components\\input\\index.js":"5","D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\components\\button\\index.js":"6","D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\modules\\Dashboard\\index.js":"7"},{"size":626,"mtime":1683011312810,"results":"8","hashOfConfig":"9"},{"size":1039,"mtime":1683224210906,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1682769910609,"results":"11","hashOfConfig":"9"},{"size":2840,"mtime":1683226223894,"results":"12","hashOfConfig":"9"},{"size":733,"mtime":1683010206674,"results":"13","hashOfConfig":"9"},{"size":434,"mtime":1683532045541,"results":"14","hashOfConfig":"9"},{"size":8516,"mtime":1683476394149,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"gf1zg2",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\index.js",[],[],[],"D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\App.js",[],[],"D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\reportWebVitals.js",[],[],"D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\modules\\Form\\index.js",[],[],"D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\components\\input\\index.js",[],[],"D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\components\\button\\index.js",[],[],"D:\\Projects and Development\\OS Projects\\CHAT APP\\client\\src\\modules\\Dashboard\\index.js",["39","40","41","42","43","44","45","46"],[],"import { useEffect, useRef, useState } from 'react'\r\nimport Avatar from '../../assets/avatar.svg'\r\nimport Scene from '../../assets/scene.jpg'\r\nimport Input from '../../components/input'\r\nimport { io } from 'socket.io-client'\r\n\r\nconst Dashboard = () => {\r\n\tconst [user, setUser] = useState(JSON.parse(localStorage.getItem('user:detail')))\r\n\tconst [conversations, setConversations] = useState([])\r\n\tconst [messages, setMessages] = useState({})\r\n\tconst [message, setMessage] = useState('')\r\n\tconst [users, setUsers] = useState([])\r\n\tconst [socket, setSocket] = useState(null)\r\n\tconst messageRef = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSocket(io('http://localhost:8080'))\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket?.emit('addUser', user?.id);\r\n\t\tsocket?.on('getUsers', users => {\r\n\t\t\tconsole.log('activeUsers :>> ', users);\r\n\t\t})\r\n\t\tsocket?.on('getMessage', data => {\r\n\t\t\tsetMessages(prev => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\tmessages: [...prev.messages, { user: data.user, message: data.message }]\r\n\t\t\t}))\r\n\t\t})\r\n\t}, [socket])\r\n\r\n\tuseEffect(() => {\r\n\t\tmessageRef?.current?.scrollIntoView({ behavior: 'smooth' })\r\n\t}, [messages?.messages])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loggedInUser = JSON.parse(localStorage.getItem('user:detail'))\r\n\t\tconst fetchConversations = async () => {\r\n\t\t\tconst res = await fetch(`http://localhost:8000/api/conversations/${loggedInUser?.id}`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst resData = await res.json()\r\n\t\t\tsetConversations(resData)\r\n\t\t}\r\n\t\tfetchConversations()\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUsers = async () => {\r\n\t\t\tconst res = await fetch(`http://localhost:8000/api/users/${user?.id}`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconst resData = await res.json()\r\n\t\t\tsetUsers(resData)\r\n\t\t}\r\n\t\tfetchUsers()\r\n\t}, [])\r\n\r\n\tconst fetchMessages = async (conversationId, receiver) => {\r\n\t\tconst res = await fetch(`http://localhost:8000/api/message/${conversationId}?senderId=${user?.id}&&receiverId=${receiver?.receiverId}`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst resData = await res.json()\r\n\t\tsetMessages({ messages: resData, receiver, conversationId })\r\n\t}\r\n\r\n\tconst sendMessage = async (e) => {\r\n\t\tsetMessage('')\r\n\t\tsocket?.emit('sendMessage', {\r\n\t\t\tsenderId: user?.id,\r\n\t\t\treceiverId: messages?.receiver?.receiverId,\r\n\t\t\tmessage,\r\n\t\t\tconversationId: messages?.conversationId\r\n\t\t});\r\n\t\tconst res = await fetch(`http://localhost:8000/api/message`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tconversationId: messages?.conversationId,\r\n\t\t\t\tsenderId: user?.id,\r\n\t\t\t\tmessage,\r\n\t\t\t\treceiverId: messages?.receiver?.receiverId\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='w-screen flex'>\r\n\t\t\t<div className='w-[25%] h-screen bg-secondary overflow-scroll'>\r\n\t\t\t\t<div className='flex items-center my-8 mx-14'>\r\n\t\t\t\t\t<div><img src={Scene} width={75} height={75} className='border border-primary p-[2px] rounded-full' /></div>\r\n\t\t\t\t\t<div className='ml-8'>\r\n\t\t\t\t\t\t<h3 className='text-2xl'>{user?.fullName}</h3>\r\n\t\t\t\t\t\t<p className='text-lg font-light'>My Account</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div className='mx-14 mt-10'>\r\n\t\t\t\t\t<div className='text-primary text-lg'>Messages</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconversations.length > 0 ?\r\n\t\t\t\t\t\t\t\tconversations.map(({ conversationId, user }) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<div className='flex items-center py-8 border-b border-b-gray-300'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='cursor-pointer flex items-center' onClick={() => fetchMessages(conversationId, user)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div><img src={Avatar} className=\"w-[60px] h-[60px] rounded-full p-[2px] border border-primary\" /></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='ml-6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='text-lg font-semibold'>{user?.fullName}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className='text-sm font-light text-gray-600'>{user?.email}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}) : <div className='text-center text-lg font-semibold mt-24'>No Conversations</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='w-[50%] h-screen bg-white flex flex-col items-center'>\r\n\t\t\t\t{\r\n\t\t\t\t\tmessages?.receiver?.fullName &&\r\n\t\t\t\t\t<div className='w-[75%] bg-secondary h-[80px] my-14 rounded-full flex items-center px-14 py-2'>\r\n\t\t\t\t\t\t<div className='cursor-pointer'><img src={Avatar} width={60} height={60} className=\"rounded-full\" /></div>\r\n\t\t\t\t\t\t<div className='ml-6 mr-auto'>\r\n\t\t\t\t\t\t\t<h3 className='text-lg'>{messages?.receiver?.fullName}</h3>\r\n\t\t\t\t\t\t\t<p className='text-sm font-light text-gray-600'>{messages?.receiver?.email}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='cursor-pointer'>\r\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-phone-outgoing\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"black\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n\t\t\t\t\t\t\t\t<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n\t\t\t\t\t\t\t\t<path d=\"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2\" />\r\n\t\t\t\t\t\t\t\t<line x1=\"15\" y1=\"9\" x2=\"20\" y2=\"4\" />\r\n\t\t\t\t\t\t\t\t<polyline points=\"16 4 20 4 20 8\" />\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t<div className='h-[75%] w-full overflow-scroll shadow-sm'>\r\n\t\t\t\t\t<div className='p-14'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmessages?.messages?.length > 0 ?\r\n\t\t\t\t\t\t\t\tmessages.messages.map(({ message, user: { id } = {} }) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<div className={`max-w-[40%] rounded-b-xl p-4 mb-6 ${id === user?.id ? 'bg-primary text-white rounded-tl-xl ml-auto' : 'bg-secondary rounded-tr-xl'} `}>{message}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div ref={messageRef}></div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}) : <div className='text-center text-lg font-semibold mt-24'>No Messages or No Conversation Selected</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tmessages?.receiver?.fullName &&\r\n\t\t\t\t\t<div className='p-14 w-full flex items-center'>\r\n\t\t\t\t\t\t<Input placeholder='Type a message...' value={message} onChange={(e) => setMessage(e.target.value)} className='w-[75%]' inputClassName='p-4 border-0 shadow-md rounded-full bg-light focus:ring-0 focus:border-0 outline-none' />\r\n\t\t\t\t\t\t<div className={`ml-4 p-2 cursor-pointer bg-light rounded-full ${!message && 'pointer-events-none'}`} onClick={() => sendMessage()}>\r\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-send\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n\t\t\t\t\t\t\t\t<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n\t\t\t\t\t\t\t\t<line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\" />\r\n\t\t\t\t\t\t\t\t<path d=\"M21 3l-6.5 18a0.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a0.55 .55 0 0 1 0 -1l18 -6.5\" />\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={`ml-4 p-2 cursor-pointer bg-light rounded-full ${!message && 'pointer-events-none'}`}>\r\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-circle-plus\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n\t\t\t\t\t\t\t\t<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n\t\t\t\t\t\t\t\t<circle cx=\"12\" cy=\"12\" r=\"9\" />\r\n\t\t\t\t\t\t\t\t<line x1=\"9\" y1=\"12\" x2=\"15\" y2=\"12\" />\r\n\t\t\t\t\t\t\t\t<line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"15\" />\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className='w-[25%] h-screen bg-light px-8 py-16 overflow-scroll'>\r\n\t\t\t\t<div className='text-primary text-lg'>People</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tusers.length > 0 ?\r\n\t\t\t\t\t\t\tusers.map(({ userId, user }) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className='flex items-center py-8 border-b border-b-gray-300'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='cursor-pointer flex items-center' onClick={() => fetchMessages('new', user)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div><img src={Avatar} className=\"w-[60px] h-[60px] rounded-full p-[2px] border border-primary\" /></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='ml-6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='text-lg font-semibold'>{user?.fullName}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='text-sm font-light text-gray-600'>{user?.email}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}) : <div className='text-center text-lg font-semibold mt-24'>No Conversations</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dashboard",{"ruleId":"47","severity":1,"message":"48","line":8,"column":15,"nodeType":"49","messageId":"50","endLine":8,"endColumn":22},{"ruleId":"51","severity":1,"message":"52","line":31,"column":5,"nodeType":"53","endLine":31,"endColumn":13,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"52","line":64,"column":5,"nodeType":"53","endLine":64,"endColumn":7,"suggestions":"55"},{"ruleId":"47","severity":1,"message":"56","line":85,"column":9,"nodeType":"49","messageId":"50","endLine":85,"endColumn":12},{"ruleId":"57","severity":1,"message":"58","line":103,"column":11,"nodeType":"59","endLine":103,"endColumn":108},{"ruleId":"57","severity":1,"message":"58","line":119,"column":18,"nodeType":"59","endLine":119,"endColumn":111},{"ruleId":"57","severity":1,"message":"58","line":136,"column":39,"nodeType":"59","endLine":136,"endColumn":107},{"ruleId":"57","severity":1,"message":"58","line":197,"column":17,"nodeType":"59","endLine":197,"endColumn":110},"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user?.id'. Either include it or remove the dependency array.","ArrayExpression",["60"],["61"],"'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [socket, user?.id]",{"range":"66","text":"67"},"Update the dependencies array to be: [user?.id]",{"range":"68","text":"69"},[1003,1011],"[socket, user?.id]",[1867,1869],"[user?.id]"]